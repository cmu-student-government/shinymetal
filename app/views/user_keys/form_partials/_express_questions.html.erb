<%= f.fields_for :express_app do |express_app| %>
  <fieldset id="express-app-fields">
    <legend>Application</legend>
    <ol>
      <li>
        This application is being submitted on behalf of a
        <%= express_app.select(:requester_type,
              ExpressApp.requester_types.keys.map { |k| [ExpressApp::REQUESTER_TYPES_HUMANIZED[k.to_sym][0], k] },
              include_blank: true)
        %>
        <div id="requester-type-additional" class="hide">
          &nbsp;<span></span>:&nbsp;
          <%= express_app.text_field(:requester_additional_info) %>
        </div>
      </li>
      <li>
        In a sentence or two, describe the goal of your project and how the data you are requesting will be used.
        <%= express_app.text_area :reasoning, rows: 5, placeholder: "e.g. We are looking to create a mobile app that showcases events happening on campus based on the user's current location. We'd like to use the Bridge API to collect the most up-to-date information on organization's events on campus. The project is for our course XX-XXX and will culminate with a final presentation at the end of this semester." %>
      </li>
      <li>
        Access to student data can only be provisioned for short periods of time. Select your target end date for this project here, up to 5 months from now.
        <br>
        <em>*If longer term access is needed at the end of this period, a regular API application can be submitted when necessary.</em>
        <br>
        <%= f.date_field :time_expired, order: [:month, :day, :year], min_date: Date.today, max_date: Date.today + 5.months %>
      </li>
      <li>
        Please select all Endpoints and columns that you will need access to:
        <br>
        <% ExpressApp::WHITELIST_COLUMNS.keys.map(&:to_s).each do |endpoint| %>
          <span class="button secondary endpoint-column-selector" data-endpoint="<%= endpoint %>" data-reveal-id="whitelist-picker"><%= endpoint.humanize %></span>
        <% end %>
      </li>
      <li>
        Check below to certify that you agree to the following:
        <ul>
          <li>I've read and agree to abide by the <a href="#">Terms of Service</a>.</li>
          <li>I pledge to keep the data accessed via The Bridge API secure and to myself.</li>
          <li>I understand that any acts in violation of this agreement will be reported as a <a href="http://www.cmu.edu/student-affairs/theword/comm_standards/standards.html">Community Standards</a> violation.</li>
        </ul>
        <br>
        <%= express_app.check_box :tos_agree %> Check here to certify that you've read the Terms of Service and pledge to keep the data accessed via The Bridge API secure and to yourself.
      </li>
    </ol>
  </fieldset>
<% end %>

<div id="whitelist-picker" class="reveal-modal" data-reveal aria-labelled-by="whitelist-picker-title" aria-hidden="true" role="dialog">
  <h3 class="header"><span></span> Columns:</h3>
  <table id="columns-table"></table>
  <h3 class="header"><span></span> Filters:</h3>
  <table id="filters-table"></table>
</div>

<% content_for :js do %>
  <script type="text/javascript">
    var req_types = <%= ExpressApp::REQUESTER_TYPES_HUMANIZED.to_json.html_safe %>
      , req_type_div = $("#requester-type-additional")
      , additional_q_div = $("#requester-type-additional")
      , whitelist_picker_modal = $("#whitelist-picker")
      , columns_table = $("#columns-table")
      , filters_table = $("#filters-table");

    $("#user_key_express_app_attributes_requester_type").change(function() {
      var val = $(this).val();
      if (val === "") {
        additional_q_div.addClass("hide");
        return;
      }

      additional_q_div.removeClass("hide");
      additional_q_div.find("span").text(req_types[val][1]);
      additional_q_div.find("input").attr("placeholder", "e.g. " + req_types[val][2]);
    });

    var whitelist_columns = <%= ExpressApp::WHITELIST_COLUMNS.to_json.html_safe %>
      , whitelist_filters = <%= ExpressApp::WHITELIST_FILTERS.to_json.html_safe %>
      , selected_columns = {}
      , selected_filters = {};

    $(".endpoint-column-selector").click(function() {
      var endpoint = $(this).data("endpoint");
      var columns = whitelist_columns[endpoint];

      // Set the modals help text and clear any inputs previously generated
      whitelist_picker_modal.find(".header span").text($(this).text());
      columns_table.html("");
      filters_table.html("");

      // For each column that is available to choose from...
      $.each(columns, function(i, column) {
        // Now create the label for the checkbox...
        // $("<label/>", { 'for': id, text: column });

        // Add the row to table
        var x = generateWhitelistRow(endpoint, column);
        x.appendTo(columns_table);
      }); // $.each
    }); // .click

    var generateWhitelistRow = function (endpoint, column) { // [name, description, example]
      var id = guid(); // Generate a unique id to associate the label and input
      var tr = $("<tr><td class='checkbox-cell'></td></tr>");
      $("<input/>", {
        id: id,
        type: 'checkbox',
        checked: Boolean(selected_columns[endpoint] && selected_columns[endpoint][column]),
        'data-endpoint': endpoint,
        'data-column': column,
        'class': 'whitelist-checkbox',
        change: updateSelectedColumn
      }).appendTo(tr.find(".checkbox-cell"));

      // Now create the label for the checkbox...
      $("<label/>", { 'for': id, text: column }).appendTo(tr.find(".label-cell"));


      return tr;
    }

    var updateSelectedColumn = function () {
      var endpoint = $(this).data("endpoint")
        , column = $(this).data("column");
      if (selected_columns[endpoint] && selected_columns[endpoint][column]) {
        selected_columns[endpoint][column] = 0
      } else if (selected_columns[endpoint]) {
        selected_columns[endpoint][column] = 1
      } else {
        selected_columns[endpoint] = {};
        selected_columns[endpoint][column] = 1
      }
    }
  </script>
<% end %>
